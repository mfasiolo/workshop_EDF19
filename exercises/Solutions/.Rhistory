plDat$plotID <- as.factor(rep(1:3, each = nrow(plDat)/3))
ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) + geom_smooth()
ind <- 1
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) + geom_smooth()
ind <- 5
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) + geom_smooth()
library(mgcFam)
fitShash <- gamV(list(logprod ~ dow + te(Posan, Instant, bs= c("cc", "cc"), k = c(5, 15)),
~ dow + te(Posan, Instant, bs= c("cc", "cc"), k = c(5, 5)),
~ 1,
~ 1),
family = shash, data=DataTRAIN)
qq(fitShash)
AIC(fitGAUS, fitLSS, fitShash)
fitShash$prior.weights
fitShash$family$qf
pinSHv <- lapply(1:5, # GAULSS
function(.ii){
tmp <- getViz(fitShash, newdata = DataTEST)
check1D(tmp, variab, type = "y",
trans = function(x, ...){
.pred <- predict(tmp, newdata = DataTEST, type = "response")
pinball(x, tmp$family$qf(qus[.ii], .pred, wt = .pred*0+1), qu = qus[.ii])
})
})
pinSHv <- lapply(1:5, # GAULSS
function(.ii){
tmp <- getViz(fitShash, newdata = DataTEST)
check1D(tmp, variab, type = "y",
trans = function(x, ...){
.pred <- predict(tmp, newdata = DataTEST, type = "response")
pinball(x, tmp$family$qf(qus[.ii], .pred, wt = .pred*0+1), qu = qus[.ii])
})
})
ind <- 5
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res,
pinLSSv[[ind]]$data$res, pinSHv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS", "SHASH"), each = nrow(plDat)/4))
ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) + geom_smooth()
ind <- 1
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res,
pinLSSv[[ind]]$data$res, pinSHv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS", "SHASH"), each = nrow(plDat)/4))
ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) + geom_smooth()
ind <- 5
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res,
pinLSSv[[ind]]$data$res, pinSHv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS", "SHASH"), each = nrow(plDat)/4))
ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) + geom_smooth()
ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) + geom_smooth() + theme_bw()
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ii]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth() + theme_bw()
}
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth() + theme_bw()
}
library(gridExtra)
grid.arrange(grobs = plts)
?geom_smooth
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw()
}
library(gridExtra)
grid.arrange(grobs = plts)
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + labs(fill = qus[[ind]])
}
library(gridExtra)
grid.arrange(grobs = plts)
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + labs(col = qus[[ind]])
}
library(gridExtra)
grid.arrange(grobs = plts)
qus[[ind]]
plts[[1]]
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + labs(plotID = qus[[ind]])
}
library(gridExtra)
grid.arrange(grobs = plts)
grid.arrange(grobs = plts)
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + labs(group = qus[[ind]])
}
library(gridExtra)
grid.arrange(grobs = plts)
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + labs(group = qus[[ind]])
}
library(gridExtra)
grid.arrange(grobs = plts)
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + labs(col = qus[[ind]])
}
library(gridExtra)
grid.arrange(grobs = plts)
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + labs(colour = qus[[ind]])
}
library(gridExtra)
grid.arrange(grobs = plts)
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + labs(colour = "a")
}
library(gridExtra)
grid.arrange(grobs = plts)
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + ggtitle(qus[ind])
}
library(gridExtra)
grid.arrange(grobs = plts)
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res,
pinLSSv[[ind]]$data$res, pinSHv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS", "SHASH"), each = nrow(plDat)/4))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + ggtitle(qus[ind])
}
library(gridExtra)
grid.arrange(grobs = plts)
pinball <- function(y, mu, qu){ # mu is fitted quantile, qu is quantile of interest
tau <- 1 - qu
d <- y - mu
l <- d * 0
l[d < 0] <- - tau*d[d<0]
l[d > 0] <- - (tau-1)*d[d>0]
return( l )
}
check2D(fitQ, "Posan", "Instant", type = "y",
trans = function(x, ...) pinball(x, fitQ$fitted.values, qu = 0.5)) +
l_gridCheck2D(mean, stand = F) +
l_rug() + ylab("Pinball loss")
fitQ2 <- qgamV(logprod ~ dow + te(Posan, Instant, bs = c("cc", "cc"), k = c(5, 15)),
data=DataTRAIN, qu = 0.5)
check2D(fitQ2, "Posan", "Instant", type = "y",
trans = function(x, ...) pinball(x, fitQ2$fitted.values, qu = 0.5)) +
l_gridCheck2D(mean, stand = F) +
l_rug() + ylab("Pinball loss")
AIC(fitQ, fitQ2)
check2D(fitQ2, "Posan", "Instant") + l_gridQCheck2D()
qus = seq(0.1, 0.9, length.out = 5)
fitMQ <- mqgamV(logprod ~ dow + te(Posan, Instant, bs = c("cc", "cc"), k = c(5, 15)),
data=DataTRAIN, qus)
fit50 <- getViz(fitMQ[[3]], newdata = DataTEST)
pl <- check1D(fit50, list("Instant", "Posan"), type = "y",
trans = function(x, ...) pinball(x, predict(fit50, newdata = DataTEST), qu = 0.5)) +
geom_smooth() +
l_gridCheck1D(gridFun = mean, level = 0) +
l_rug() + ylab("Pinball loss")
print(pl, pages = 1)
plot(solar_prod$Instant[1:200], solar_prod$logprod[1:200])
fitLSS <- gamV(list(logprod ~ dow + te(Posan, Instant, bs= c("cc", "cc"), k = c(5, 15)),
~ dow + te(Posan, Instant, bs= c("cc", "cc"), k = c(5, 5))),
family = gaulss,
data=DataTRAIN)
plot(fitLSS, select = 2)
fitGAUS <- gamV(logprod ~ te(Posan, Instant, bs= c("cc", "cc"), k = c(5, 15)),
data = DataTRAIN)
variab <- "Instant"
pinQv <- lapply(1:5, # QGAM
function(.ii){
tmp <- getViz(fitMQ[[.ii]], newdata = DataTEST)
check1D(tmp, variab, type = "y",
trans = function(x, ...)
pinball(x, predict(tmp, newdata = DataTEST), qu = qus[.ii]))
})
pinGAUSv <- lapply(1:5, # GAUSSIAN GAM
function(.ii){
tmp <- getViz(fitGAUS, newdata = DataTEST)
check1D(tmp, variab, type = "y",
trans = function(x, ...)
pinball(x,
qnorm(qus[.ii], predict(tmp, newdata = DataTEST), sqrt(fitGAUS$sig2)),
qu = qus[.ii]))
})
pinLSSv <- lapply(1:5, # GAULSS
function(.ii){
tmp <- getViz(fitLSS, newdata = DataTEST)
check1D(tmp, variab, type = "y",
trans = function(x, ...){
.pred <- predict(tmp, newdata = DataTEST, type = "response")
pinball(x, qnorm(qus[.ii], .pred[ , 1], 1 / .pred[ , 2]), qu = qus[.ii])
})
})
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + ggtitle(qus[ind])
}
library(gridExtra)
grid.arrange(grobs = plts)
variab <- "Posan" # "Instant"
pinQv <- lapply(1:5, # QGAM
function(.ii){
tmp <- getViz(fitMQ[[.ii]], newdata = DataTEST)
check1D(tmp, variab, type = "y",
trans = function(x, ...)
pinball(x, predict(tmp, newdata = DataTEST), qu = qus[.ii]))
})
pinGAUSv <- lapply(1:5, # GAUSSIAN GAM
function(.ii){
tmp <- getViz(fitGAUS, newdata = DataTEST)
check1D(tmp, variab, type = "y",
trans = function(x, ...)
pinball(x,
qnorm(qus[.ii], predict(tmp, newdata = DataTEST), sqrt(fitGAUS$sig2)),
qu = qus[.ii]))
})
pinLSSv <- lapply(1:5, # GAULSS
function(.ii){
tmp <- getViz(fitLSS, newdata = DataTEST)
check1D(tmp, variab, type = "y",
trans = function(x, ...){
.pred <- predict(tmp, newdata = DataTEST, type = "response")
pinball(x, qnorm(qus[.ii], .pred[ , 1], 1 / .pred[ , 2]), qu = qus[.ii])
})
})
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + ggtitle(qus[ind])
}
library(gridExtra)
grid.arrange(grobs = plts)
qq(fitLSS)
library(mgcFam)
fitShash <- gamV(list(logprod ~ dow + te(Posan, Instant, bs= c("cc", "cc"), k = c(5, 15)),
~ dow + te(Posan, Instant, bs= c("cc", "cc"), k = c(5, 5)),
~ 1,
~ 1),
family = shash, data=DataTRAIN)
fitShash$family$qf
qq(fitShash)
AIC(fitGAUS, fitLSS, fitShash)
pinSHv <- lapply(1:5, # shash
function(.ii){
tmp <- getViz(fitShash, newdata = DataTEST)
check1D(tmp, variab, type = "y",
trans = function(x, ...){
.pred <- predict(tmp, newdata = DataTEST, type = "response")
pinball(x, tmp$family$qf(qus[.ii], .pred, wt = .pred*0+1), qu = qus[.ii])
})
})
plts <- list()
for(ind in 1:5){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res,
pinLSSv[[ind]]$data$res, pinSHv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS", "SHASH"), each = nrow(plDat)/4))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + ggtitle(qus[ind])
}
library(gridExtra)
grid.arrange(grobs = plts)
fitShash$family$qf
Sweave2knitr("exercises_2.Rnw")
setwd("~/Desktop/All/Dropbox/Work/Notes/Slides/qgam/2019_EDF_mgcViz/exercises")
Sweave2knitr("exercises_2.Rnw")
names(QGAM)
names(fitMQ)
variab <- "Posan" # "Instant"
compareMod <- function(QGAM, GAUS, GAULSS, dat, variab){
nq <- length(QGAM)
qus <- as.numeric(names(QGAM))
pinQv <- lapply(1:nq, # QGAM
function(.ii){
tmp <- getViz(QGAM[[.ii]], newdata = dat)
check1D(tmp, variab, type = "y",
trans = function(x, ...)
pinball(x, predict(tmp, newdata = dat), qu = qus[.ii]))
})
pinGAUSv <- lapply(1:nq, # GAUSSIAN GAM
function(.ii){
tmp <- getViz(GAUS, newdata = dat)
check1D(tmp, variab, type = "y",
trans = function(x, ...)
pinball(x,
qnorm(qus[.ii], predict(tmp, newdata = dat), sqrt(fitGAUS$sig2)),
qu = qus[.ii]))
})
pinLSSv <- lapply(1:nq, # GAULSS
function(.ii){
tmp <- getViz(GAULSS, newdata = dat)
check1D(tmp, variab, type = "y",
trans = function(x, ...){
.pred <- predict(tmp, newdata = dat, type = "response")
pinball(x, qnorm(qus[.ii], .pred[ , 1], 1 / .pred[ , 2]), qu = qus[.ii])
})
})
plts <- list()
for(ind in 1:nq){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + ggtitle(qus[ind])
}
}
plts <- compareMod(QGAM = fitMQ, GAUS = fitGAUS, GAULSS = fitLSS, dat = DataTEST, variab = "Instant")
library(gridExtra)
grid.arrange(grobs = plts)
variab <- "Posan" # "Instant"
compareMod <- function(QGAM, GAUS, GAULSS, dat, variab){
nq <- length(QGAM)
qus <- as.numeric(names(QGAM))
pinQv <- lapply(1:nq, # QGAM
function(.ii){
tmp <- getViz(QGAM[[.ii]], newdata = dat)
check1D(tmp, variab, type = "y",
trans = function(x, ...)
pinball(x, predict(tmp, newdata = dat), qu = qus[.ii]))
})
pinGAUSv <- lapply(1:nq, # GAUSSIAN GAM
function(.ii){
tmp <- getViz(GAUS, newdata = dat)
check1D(tmp, variab, type = "y",
trans = function(x, ...)
pinball(x,
qnorm(qus[.ii], predict(tmp, newdata = dat), sqrt(fitGAUS$sig2)),
qu = qus[.ii]))
})
pinLSSv <- lapply(1:nq, # GAULSS
function(.ii){
tmp <- getViz(GAULSS, newdata = dat)
check1D(tmp, variab, type = "y",
trans = function(x, ...){
.pred <- predict(tmp, newdata = dat, type = "response")
pinball(x, qnorm(qus[.ii], .pred[ , 1], 1 / .pred[ , 2]), qu = qus[.ii])
})
})
plts <- list()
for(ind in 1:nq){
plDat <- as.data.frame(rbind(pinQv[[ind]]$data$res, pinGAUSv[[ind]]$data$res, pinLSSv[[ind]]$data$res))
plDat$plotID <- as.factor(rep(c("QGAM", "GAU", "GAULSS"), each = nrow(plDat)/3))
plts[[ind]] <- ggplot(data = plDat,
mapping = aes(x = x, y = y, group = plotID, col = plotID, fill = plotID)) +
geom_smooth(se = FALSE) + theme_bw() + ggtitle(qus[ind])
}
return(plts)
}
plts <- compareMod(QGAM = fitMQ, GAUS = fitGAUS, GAULSS = fitLSS, dat = DataTEST, variab = "Instant")
library(gridExtra)
grid.arrange(grobs = plts)
Sweave2knitr("exercises_2.Rnw")
Sweave2knitr("exercises_1.Rnw")
library(knitr)
library(rgl)
opts_chunk$set(out.extra='style="display:block; margin: auto"', fig.align="center", tidy=FALSE)
knit_hooks$set(webgl = hook_webgl)
source(file = "my_settings.R")
library(RhpcBLASctl); blas_set_num_threads(1)
library(mgcViz)
load(paste0(goodLocation, "/data/gefcom_big.rda")) # change this
fit1 <- bamV(NetDemand ~ Dow +
NetDemand.24 +
s(Trend, k = 6, bs = "cr") +
s(wM, bs = "cr") +
s(Instant, bs = "cr") +
s(wM_s95, bs = 'cr') +
s(Posan, bs='cc', k=20),
data = gefcom_big,
aGam = list(discrete = TRUE, nthreads = 2),
aViz = list(nsim = 50))
print(plot(fit1, allTerms = TRUE), pages = 1)
tmp <- check(fit1)
pl <- check1D(fit1, x = list("NetDemand.24", "wM", "wM_s95", "Instant")) + l_gridCheck1D(n = 40)
print(pl, pages = 1)
fit2 <- bamV(NetDemand ~ Dow +
s(NetDemand.24, bs = "cr", k = 20) +
s(Trend, k = 6, bs = "cr") +
s(wM, bs = "cr", k = 20) +
s(Instant, bs = "cr", k = 20) +
s(wM_s95, bs = 'cr', k = 20) +
s(Posan, bs='cc', k = 30),
data = gefcom_big,
aGam = list(discrete = TRUE, nthreads = 2),
aViz = list(nsim = 50))
tmp <- check(fit2) # Looks better
pl <- check1D(fit2, x = list("NetDemand.24", "wM", "wM_s95", "Instant")) + l_gridCheck1D(n = 40)
print(pl, pages = 1)
pl <- check2D(fit2, x1 = c("NetDemand.24", "wM", "wM_s95", "Posan"), x2 = rep("Instant", 4)) + l_gridCheck2D()
?check2D
pl <- check2D(fit2, x1 = c("NetDemand.24", "wM", "wM_s95", "Posan")) + l_gridCheck2D()
pl <- check2D(fit2, x1 = list("NetDemand.24", "wM", "wM_s95", "Posan"), x2 = list("Instant", 4)) + l_gridCheck2D()
pl <- check2D(fit2,
x1 = list("NetDemand.24", "wM", "wM_s95", "Posan"),
x2 = list("Instant", "Instant", "Instant", "Instant")) + l_gridCheck2D()
print(pl, pages = 1)
fit3 <- bamV(NetDemand ~ Dow +
s(NetDemand.24, bs = "cr", k = 20) +
s(Trend, k = 6, bs = "cr") +
s(wM, bs = "cr", k = 20) +
s(Instant, bs = "cr", k = 20) +
s(wM_s95, bs = 'cr', k = 20) +
s(Posan, bs='cc', k=30) +
ti(NetDemand.24, Instant, k = c(15, 15), bs = c("cr", "cr")) +
ti(wM, Instant, k = c(10, 10), bs = c("cr", "cr")) +
ti(wM_s95, Instant, k = c(15, 15), bs = c("cr", "cr")) +
ti(Posan, Instant, k = c(10, 15), bs = c("cc", "cr")),
data = gefcom_big,
aGam = list(discrete = TRUE, nthreads = 2),
aViz = list(nsim = 50))
AIC(fit2, fit3)
pl <- check2D(fit3,
x1 = list("NetDemand.24", "wM", "wM_s95", "Posan"),
x2 = list("Instant", "Instant", "Instant", "Instant")) + l_gridCheck2D()
print(pl, pages = 1)
print(plot(fit3, n = 200, select = 1:6), pages = 1)
print(plot(fit3, n2 = 100, select = 7:10) + theme(legend.position="none"),
pages = 1)
pl <- lapply(7:10,
function(.ii){
( plot(sm(fit3, .ii), too.far = -1, maxpo = 500) +
l_fitRaster(noiseup = T, pTrans = zto1(0.05, 3, 0.1)) +
l_fitContour() + l_points() )$ggObj
})
grid.arrange(grobs = pl, ncol = 2)
pl <- check2D(fit3,
x1 = list("NetDemand.24", "wM", "wM_s95", "Posan"),
x2 = list("Instant", "Instant", "Instant", "Instant")) +
l_gridCheck2D(gridFun = sd)
print(pl, pages = 1)
pl <- check2D(fit3,
x1 = list("NetDemand.24", "wM", "wM_s95", "Posan"),
x2 = list("Instant", "Instant", "Instant", "Instant")) +
l_gridCheck2D(gridFun = skewness)
library(e1071)
pl <- check2D(fit3,
x1 = list("NetDemand.24", "wM", "wM_s95", "Posan"),
x2 = list("Instant", "Instant", "Instant", "Instant")) +
l_gridCheck2D(gridFun = skewness)
print(pl, pages = 1)
